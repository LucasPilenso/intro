>>> dna = 'GATGGGATTGGGGTTTTCCCCTCCCATGTGCTCAAGACTGGCGCTAAAAGTTTTGAGCTTCTCAAAAGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGCCCCCTCTGAGTCAGGAAACATTTTCAGACCTATGGAAACTACTTCCTGAAAACAACGTTCTGTCCCCCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTCCCCGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTCCCCCCGTGGCCCCTGCACCAGCAGCTCCTACACCGGCGGCCCCTGCACCAGCCCCCTCCTGGCCCCTGTCATCTTCTGTCCCTTCCCAGAAAACCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTCCCCTGCCCTCAACAAGATGTTTTGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACACCCCCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGCCCCCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGCCCCTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACTTTTCG'
>>> len(dna)
842
>>> dna.count('A')
167
>>> dna.lower
<built-in method lower of str object at 0x142ca90>
>>> dna.lower()
'gatgggattggggttttcccctcccatgtgctcaagactggcgctaaaagttttgagcttctcaaaagtctagagccaccgtccagggagcaggtagctgctgggctccggggacactttgcgttcgggctgggagcgtgctttccacgacggtgacacgcttccctggattggcagccagactgccttccgggtcactgccatggaggagccgcagtcagatcctagcgtcgagccccctctgagtcaggaaacattttcagacctatggaaactacttcctgaaaacaacgttctgtcccccttgccgtcccaagcaatggatgatttgatgctgtccccggacgatattgaacaatggttcactgaagacccaggtccagatgaagctcccagaattcgccagaggctgctccccccgtggcccctgcaccagcagctcctacaccggcggcccctgcaccagccccctcctggcccctgtcatcttctgtcccttcccagaaaacctaccagggcagctacggtttccgtctgggcttcttgcattctgggacagccaagtctgtgacttgcacgtactcccctgccctcaacaagatgttttgccaactggccaagacctgccctgtgcagctgtgggttgattccacacccccgcccggcacccgcgtccgcgccatggccatctacaagcagtcacagcacatgacggaggttgtgaggcgctgcccccaccatgagcgctgctcagatagcgatggtctggcccctcctcagcatcttatccgagtggaaggaaatttgcgtgtggagtatttggatgacagaaacacttttcg'
>>> c = dna.count('C')
>>> g =  dna.count('G')
>>> pcg = (c + g)/ len(dna)
>>> pcg
0.5795724465558195
>>> pcg*100
57.95724465558195
>>> dna.replace('T' , 'U')
'GAUGGGAUUGGGGUUUUCCCCUCCCAUGUGCUCAAGACUGGCGCUAAAAGUUUUGAGCUUCUCAAAAGUCUAGAGCCACCGUCCAGGGAGCAGGUAGCUGCUGGGCUCCGGGGACACUUUGCGUUCGGGCUGGGAGCGUGCUUUCCACGACGGUGACACGCUUCCCUGGAUUGGCAGCCAGACUGCCUUCCGGGUCACUGCCAUGGAGGAGCCGCAGUCAGAUCCUAGCGUCGAGCCCCCUCUGAGUCAGGAAACAUUUUCAGACCUAUGGAAACUACUUCCUGAAAACAACGUUCUGUCCCCCUUGCCGUCCCAAGCAAUGGAUGAUUUGAUGCUGUCCCCGGACGAUAUUGAACAAUGGUUCACUGAAGACCCAGGUCCAGAUGAAGCUCCCAGAAUUCGCCAGAGGCUGCUCCCCCCGUGGCCCCUGCACCAGCAGCUCCUACACCGGCGGCCCCUGCACCAGCCCCCUCCUGGCCCCUGUCAUCUUCUGUCCCUUCCCAGAAAACCUACCAGGGCAGCUACGGUUUCCGUCUGGGCUUCUUGCAUUCUGGGACAGCCAAGUCUGUGACUUGCACGUACUCCCCUGCCCUCAACAAGAUGUUUUGCCAACUGGCCAAGACCUGCCCUGUGCAGCUGUGGGUUGAUUCCACACCCCCGCCCGGCACCCGCGUCCGCGCCAUGGCCAUCUACAAGCAGUCACAGCACAUGACGGAGGUUGUGAGGCGCUGCCCCCACCAUGAGCGCUGCUCAGAUAGCGAUGGUCUGGCCCCUCCUCAGCAUCUUAUCCGAGUGGAAGGAAAUUUGCGUGUGGAGUAUUUGGAUGACAGAAACACUUUUCG'
>>> sub.dna[100:200]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sub' is not defined
>>> sub-dna=dna[100:200]
  File "<stdin>", line 1
SyntaxError: cannot assign to operator
>>> sub-dna = dna[100:200]
  File "<stdin>", line 1
SyntaxError: cannot assign to operator
>>> dna
'GATGGGATTGGGGTTTTCCCCTCCCATGTGCTCAAGACTGGCGCTAAAAGTTTTGAGCTTCTCAAAAGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGCCCCCTCTGAGTCAGGAAACATTTTCAGACCTATGGAAACTACTTCCTGAAAACAACGTTCTGTCCCCCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTCCCCGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTCCCCCCGTGGCCCCTGCACCAGCAGCTCCTACACCGGCGGCCCCTGCACCAGCCCCCTCCTGGCCCCTGTCATCTTCTGTCCCTTCCCAGAAAACCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTCCCCTGCCCTCAACAAGATGTTTTGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACACCCCCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGCCCCCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGCCCCTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACTTTTCG'
>>> sub = dna[100:200)
  File "<stdin>", line 1
    sub = dna[100:200)
                     ^
SyntaxError: closing parenthesis ')' does not match opening parenthesis '['
>>> sub = dna[100:200]
>>> sub
'CTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTG'
>>> len(sub)
100
>>> sub.count('G')
34
>>> rev = dna[::-1]
>>> rev
'GCTTTTCACAAAGACAGTAGGTTTATGAGGTGTGCGTTTAAAGGAAGGTGAGCCTATTCTACGACTCCTCCCCGGTCTGGTAGCGATAGACTCGTCGCGAGTACCACCCCCGTCGCGGAGTGTTGGAGGCAGTACACGACACTGACGAACATCTACCGGTACCGCGCCTGCGCCCACGGCCCGCCCCCACACCTTAGTTGGGTGTCGACGTGTCCCGTCCAGAACCGGTCAACCGTTTTGTAGAACAACTCCCGTCCCCTCATGCACGTTCAGTGTCTGAACCGACAGGGTCTTACGTTCTTCGGGTCTGCCTTTGGCATCGACGGGACCATCCAAAAGACCCTTCCCTGTCTTCTACTGTCCCCGGTCCTCCCCCGACCACGTCCCCGGCGGCCACATCCTCGACGACCACGTCCCCGGTGCCCCCCTCGTCGGAGACCGCTTAAGACCCTCGAAGTAGACCTGGACCCAGAAGTCACTTGGTAACAAGTTATAGCAGGCCCCTGTCGTAGTTTAGTAGGTAACGAACCCTGCCGTTCCCCCTGTCTTGCAACAAAAGTCCTTCATCAAAGGTATCCAGACTTTTACAAAGGACTGAGTCTCCCCCGAGCTGCGATCCTAGACTGACGCCGAGGAGGTACCGTCACTGGGCCTTCCGTCAGACCGACGGTTAGGTCCCTTCGCACAGTGGCAGCACCTTTCGTGCGAGGGTCGGGCTTGCGTTTCACAGGGGCCTCGGGTCGTCGATGGACGAGGGACCTGCCACCGAGATCTGAAAACTCTTCGAGTTTTGAAAATCGCGGTCAGAACTCGTGTACCCTCCCCTTTTGGGGTTAGGGTAG'
>>> rev.replace('G' , 'C')
'CCTTTTCACAAACACACTACCTTTATCACCTCTCCCTTTAAACCAACCTCACCCTATTCTACCACTCCTCCCCCCTCTCCTACCCATACACTCCTCCCCACTACCACCCCCCTCCCCCACTCTTCCACCCACTACACCACACTCACCAACATCTACCCCTACCCCCCCTCCCCCCACCCCCCCCCCCCACACCTTACTTCCCTCTCCACCTCTCCCCTCCACAACCCCTCAACCCTTTTCTACAACAACTCCCCTCCCCTCATCCACCTTCACTCTCTCAACCCACACCCTCTTACCTTCTTCCCCTCTCCCTTTCCCATCCACCCCACCATCCAAAACACCCTTCCCTCTCTTCTACTCTCCCCCCTCCTCCCCCCACCACCTCCCCCCCCCCCACATCCTCCACCACCACCTCCCCCCTCCCCCCCTCCTCCCACACCCCTTAACACCCTCCAACTACACCTCCACCCACAACTCACTTCCTAACAACTTATACCACCCCCCTCTCCTACTTTACTACCTAACCAACCCTCCCCTTCCCCCTCTCTTCCAACAAAACTCCTTCATCAAACCTATCCACACTTTTACAAACCACTCACTCTCCCCCCACCTCCCATCCTACACTCACCCCCACCACCTACCCTCACTCCCCCTTCCCTCACACCCACCCTTACCTCCCTTCCCACACTCCCACCACCTTTCCTCCCACCCTCCCCCTTCCCTTTCACACCCCCCTCCCCTCCTCCATCCACCACCCACCTCCCACCCACATCTCAAAACTCTTCCACTTTTCAAAATCCCCCTCACAACTCCTCTACCCTCCCCTTTTCCCCTTACCCTAC'
>>> rev.replace('G' , 'C') = rev1
  File "<stdin>", line 1
SyntaxError: cannot assign to function call
>>> rev1 = rev.replace('G' , 'C')
>>> rev2 = rev1.replace('C' , 'G')
>>> rev3 = rev2.
KeyboardInterrupt
>>> 
KeyboardInterrupt
>>> rev1 = rev.replace('G' , 'y')
>>> rev
'GCTTTTCACAAAGACAGTAGGTTTATGAGGTGTGCGTTTAAAGGAAGGTGAGCCTATTCTACGACTCCTCCCCGGTCTGGTAGCGATAGACTCGTCGCGAGTACCACCCCCGTCGCGGAGTGTTGGAGGCAGTACACGACACTGACGAACATCTACCGGTACCGCGCCTGCGCCCACGGCCCGCCCCCACACCTTAGTTGGGTGTCGACGTGTCCCGTCCAGAACCGGTCAACCGTTTTGTAGAACAACTCCCGTCCCCTCATGCACGTTCAGTGTCTGAACCGACAGGGTCTTACGTTCTTCGGGTCTGCCTTTGGCATCGACGGGACCATCCAAAAGACCCTTCCCTGTCTTCTACTGTCCCCGGTCCTCCCCCGACCACGTCCCCGGCGGCCACATCCTCGACGACCACGTCCCCGGTGCCCCCCTCGTCGGAGACCGCTTAAGACCCTCGAAGTAGACCTGGACCCAGAAGTCACTTGGTAACAAGTTATAGCAGGCCCCTGTCGTAGTTTAGTAGGTAACGAACCCTGCCGTTCCCCCTGTCTTGCAACAAAAGTCCTTCATCAAAGGTATCCAGACTTTTACAAAGGACTGAGTCTCCCCCGAGCTGCGATCCTAGACTGACGCCGAGGAGGTACCGTCACTGGGCCTTCCGTCAGACCGACGGTTAGGTCCCTTCGCACAGTGGCAGCACCTTTCGTGCGAGGGTCGGGCTTGCGTTTCACAGGGGCCTCGGGTCGTCGATGGACGAGGGACCTGCCACCGAGATCTGAAAACTCTTCGAGTTTTGAAAATCGCGGTCAGAACTCGTGTACCCTCCCCTTTTGGGGTTAGGGTAG'
>>> rev = rev.replace('C' , 'g')
>>> rev = rev.replace('G' , 'c')
>>> rev = rev.replace('A' , 't')
>>> rev = rev.replace('T' , 'a')
>>> rev = rev.upper
>>> rev
<built-in method upper of str object at 0x16db000>
>>> rev = rev.upper()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'builtin_function_or_method' object has no attribute 'upper'
>>> rev
<built-in method upper of str object at 0x16db000>
>>> rev = rev.replace('C' , 'g')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'builtin_function_or_method' object has no attribute 'replace'
>>> eco = 'GATGGGATTGGGGTTTTCCCCTCCCATGTGCTCAAGACTGGCGCTAAAAGTTTTGAGCTTCTCAAAAGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGCCCCCTCTGAGTCAGGAAACATTTTCAGACCTATGGAAACTACTTCCTGAAAACAACGTTCTGTCCCCCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTCCCCGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTCCCCCCGTGGCCCCTGCACCAGCAGCTCCTACACCGGCGGCCCCTGCACCAGCCCCCTCCTGGCCCCTGTCATCTTCTGTCCCTTCCCAGAAAACCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTCCCCTGCCCTCAACAAGATGTTTTGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACACCCCCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGCCCCCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGCCCCTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACTTTTCG'
>>> print( '{:<20}'.format('Complement'), eco)
Complement           GATGGGATTGGGGTTTTCCCCTCCCATGTGCTCAAGACTGGCGCTAAAAGTTTTGAGCTTCTCAAAAGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGCCCCCTCTGAGTCAGGAAACATTTTCAGACCTATGGAAACTACTTCCTGAAAACAACGTTCTGTCCCCCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTCCCCGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTCCCCCCGTGGCCCCTGCACCAGCAGCTCCTACACCGGCGGCCCCTGCACCAGCCCCCTCCTGGCCCCTGTCATCTTCTGTCCCTTCCCAGAAAACCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTCCCCTGCCCTCAACAAGATGTTTTGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACACCCCCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGCCCCCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGCCCCTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACTTTTCG
>>> rev = rev.replace('C' , 'g')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'builtin_function_or_method' object has no attribute 'replace'
>>> >>> rev = rev.replace('G' , 'c')
  File "<stdin>", line 1
    >>> rev = rev.replace('G' , 'c')
    ^
SyntaxError: invalid syntax
>>> >>> rev = rev.replace('A' , 't')
  File "<stdin>", line 1
    >>> rev = rev.replace('A' , 't')
    ^
SyntaxError: invalid syntax
>>> >>> rev = rev.replace('T' , 'a')
  File "<stdin>", line 1
    >>> rev = rev.replace('T' , 'a')
    ^
SyntaxError: invalid syntax
>>> >>> rev = rev.upper
  File "<stdin>", line 1
    >>> rev = rev.upper
    ^
SyntaxError: invalid syntax
>>> eco = eco.replace('C' , 'g')
>>> eco = eco.replace('G' , 'c')
>>> eco = eco.replace('A' , 't')
>>> eco = eco.replace('T' , 'a')
>>> eco = eco.upper()
>>> eco
'CTACCCTAACCCCAAAAGGGGAGGGTACACGAGTTCTGACCGCGATTTTCAAAACTCGAAGAGTTTTCAGATCTCGGTGGCAGGTCCCTCGTCCATCGACGACCCGAGGCCCCTGTGAAACGCAAGCCCGACCCTCGCACGAAAGGTGCTGCCACTGTGCGAAGGGACCTAACCGTCGGTCTGACGGAAGGCCCAGTGACGGTACCTCCTCGGCGTCAGTCTAGGATCGCAGCTCGGGGGAGACTCAGTCCTTTGTAAAAGTCTGGATACCTTTGATGAAGGACTTTTGTTGCAAGACAGGGGGAACGGCAGGGTTCGTTACCTACTAAACTACGACAGGGGCCTGCTATAACTTGTTACCAAGTGACTTCTGGGTCCAGGTCTACTTCGAGGGTCTTAAGCGGTCTCCGACGAGGGGGGCACCGGGGACGTGGTCGTCGAGGATGTGGCCGCCGGGGACGTGGTCGGGGGAGGACCGGGGACAGTAGAAGACAGGGAAGGGTCTTTTGGATGGTCCCGTCGATGCCAAAGGCAGACCCGAAGAACGTAAGACCCTGTCGGTTCAGACACTGAACGTGCATGAGGGGACGGGAGTTGTTCTACAAAACGGTTGACCGGTTCTGGACGGGACACGTCGACACCCAACTAAGGTGTGGGGGCGGGCCGTGGGCGCAGGCGCGGTACCGGTAGATGTTCGTCAGTGTCGTGTACTGCCTCCAACACTCCGCGACGGGGGTGGTACTCGCGACGAGTCTATCGCTACCAGACCGGGGAGGAGTCGTAGAATAGGCTCACCTTCCTTTAAACGCACACCTCATAAACCTACTGTCTTTGTGAAAAGC'
